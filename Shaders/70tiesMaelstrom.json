{"working":false,"featured":false,"private":false,"stars":["5ec340a7658b34001590feb5","60c1b13cdf59c70014cdc6d6","62fba7a8ad0a68001afa5860"],"images":[],"categories":["5e7a80dd7c113618206df0ad","5e7a80dd7c113618206df0c8"],"publicCategories":["Automatically Converted"],"privateCategories":["noise"],"_id":"5e9af9e29a2c7b0017693783","title":"70tiesMaelstrom","rawFragmentSource":"/*{\n\t\"CREDIT\": \"by mojovideotech\",\n\n  \"CATEGORIES\": [\n    \"noise\",\n    \"Automatically Converted\"\n  ],\n  \"DESCRIPTION\": \"Automatically converted from https://www.shadertoy.com/view/4tfSzn by FabriceNeyret2.  .\",\n  \"IMPORTED\": [\n    \n  ],\n  \"INPUTS\": [\n    {\n       \"MAX\": [\n        1,\n        1\n      ],\n      \"MIN\": [\n        0,\n        0\n      ],\n      \"DEFAULT\":[0.5,0.5],\n      \"NAME\": \"iMouse\",\n      \"TYPE\": \"point2D\"\n    }\n  ]\n}\n*/\n\n\n#define PI 3.1415927\n\n// --- noise functions from https://www.shadertoy.com/view/XslGRr\n// Created by inigo quilez - iq/2013\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nconst mat3 m = mat3( 0.00,  0.80,  0.60,\n           \t\t    -0.80,  0.36, -0.48,\n             \t\t-0.60, -0.48,  0.64 );\n\nfloat hash( float n ) {\n    return fract(sin(n)*43758.5453);\n}\n\nfloat noise( in vec3 x ) { // in [0,1]\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\n    f = f*f*(3.-2.*f);\n\n    float n = p.x + p.y*57. + 113.*p.z;\n\n    float res = mix(mix(mix( hash(n+  0.), hash(n+  1.),f.x),\n                        mix( hash(n+ 57.), hash(n+ 58.),f.x),f.y),\n                    mix(mix( hash(n+113.), hash(n+114.),f.x),\n                        mix( hash(n+170.), hash(n+171.),f.x),f.y),f.z);\n    return res;\n}\n\nfloat fbm( vec3 p ) { // in [0,1]\n    float f;\n    f  = 0.5000*noise( p ); p = m*p*2.02;\n    f += 0.2500*noise( p ); p = m*p*2.03;\n    f += 0.1250*noise( p ); p = m*p*2.01;\n    f += 0.0625*noise( p );\n    return f;\n}\n// --- End of: Created by inigo quilez --------------------\n\nvec2 sfbm2( vec3 p ) {\n    return 2.*vec2(fbm(p),fbm(p-327.67))-1.;\n}\n\n    \nvoid main()\n{\n    float t = TIME*0.25;\n    vec2 mouse = iMouse.xy / RENDERSIZE.xy;\n    if (iMouse.x<0.) \n         mouse = vec2(.9,.5)*vec2(cos(1.*t)+.5*sin(2.2*t),sin(1.1*t)+.5*cos(1.9*t))/1.5;   \n    else \n            mouse = 2.*mouse-1.;\n\tvec2 uv = 2.*(gl_FragCoord.xy / RENDERSIZE.y-vec2(.9,.5));\n    float a = .1*TIME, c=cos(a), s=sin(a); mat2 m = mat2(c,-s,s,c);\n    \n    vec4 col=vec4(0.);\n    // vec3 paint = vec3(.7,.5,.4);\n    vec3 paint = vec3(.3,.9,.7);\n    \n    for(float z=0.; z<1.; z+= 1./7.) {\n        paint = .5+.5*cos(4.*2.*PI*z+vec3(0.,2.*PI/3.,-2.*PI/3.));\n        uv *= m;\n        vec2 duv = vec2(.8,.5)*sfbm2(vec3(1.2*uv,3.*z+TIME)) - 3.*z*mouse;\n    \tfloat d = length(uv+duv)-1.2*(1.-z),\n              a = smoothstep(.1,.09,abs(d)); \n        d = .5*a+.5*smoothstep(.09,.08,abs(d));\n        col += (1.-col.a)*vec4(d*paint*exp(-0.*z),a);\n        if (col.a>=.9) break;\n    }\n\tgl_FragColor = col;\n}","rawVertexSource":"void main() {\n\tvv_vertShaderInit();\n}","description":"Automatically converted from https://www.shadertoy.com/view/4tfSzn by FabriceNeyret2.  .","shaderType":"generator","forkedFrom":"5e7a7fb27c113618206de2bb","user":{"_id":"5e9acbd0658b34001590fdb5","username":"cstace.media","name":"Cameron Stace","id":"5e9acbd0658b34001590fdb5"},"username":"cstace.media","createdAt":"2020-04-18T13:00:18.010Z","updatedAt":"2022-08-16T14:46:14.577Z","__v":2,"thumbnailCloudinaryId":"mluxn1cvl3itfxgbwfpq","id":"5e9af9e29a2c7b0017693783"}